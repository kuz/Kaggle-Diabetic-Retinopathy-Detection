name: "ShallowAutoencoder"
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TEST
    #stage: "test-on-test"
  }
  transform_param {
    scale: 0.0039215684
  }
  data_param {
    source: "/storage/hpc_anna/Kaggle_DRD/caffeinput/ae_size256/ilsvrc12_train_lmdb"
    batch_size: 1
    backend: LMDB
  }
}
layer {
  name: "flatdata"
  type: "Flatten"
  bottom: "data"
  top: "flatdata"
}
layer {
  name: "encode1"
  type: "InnerProduct"
  bottom: "data"
  top: "encode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.005
      #sparse: 15
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "encode1neuron"
  type: "Sigmoid"
  bottom: "encode1"
  top: "encode1neuron"
}
layer {
  name: "bottleneck"
  type: "InnerProduct"
  bottom: "encode1neuron"
  top: "bottleneck"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.05
      #sparse: 15
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "decode1"
  type: "InnerProduct"
  bottom: "bottleneck"
  top: "decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.05
      #sparse: 15
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "decode1neuron"
  type: "Sigmoid"
  bottom: "decode1"
  top: "decode1neuron"
}
layer {
  name: "reconstruct"
  type: "InnerProduct"
  bottom: "decode1neuron"
  top: "reconstruct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 196608
    weight_filler {
      type: "gaussian"
      std: 0.005
      #sparse: 15
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SigmoidCrossEntropyLoss"
  bottom: "reconstruct"
  bottom: "flatdata"
  top: "cross_entropy_loss"
  loss_weight: 1
}
layer {
  name: "reconstructneuron"
  type: "Sigmoid"
  bottom: "reconstruct"
  top: "reconstructneuron"
}
layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "reconstructneuron"
  bottom: "flatdata"
  top: "l2_error"
  loss_weight: 0
}
